import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import f_oneway

df = pd.read_csv(r'C:\Users\Wissen\Desktop\EDA\signal_metrics.csv')

df.head()

df.columns

df.tail()

df.shape

df.info()

df

df.describe() 

df.sort_values(['Data Throughput (Mbps)','Signal Strength (dBm)','Latency (ms)'],ascending=False,inplace=True)
df

network_types=df["Network Type"].value_counts()
network_types

df["BB60C Measurement (dBm)"].isna().sum()

print("Maximum measurement of BB6OC:", df["BB60C Measurement (dBm)"].max())
print("Minimum measurement of BB60C:", df["BB60C Measurement (dBm)"].min())

df.head()

df["srsRAN Measurement (dBm)"].isna().sum()

print("Maximum measurement of srsRAN:", df["srsRAN Measurement (dBm)"].max())
print("Minimum measurement of srsRAN:", df["srsRAN Measurement (dBm)"].min())

df["BladeRFxA9 Measurement (dBm)"].isna().sum()

print("Maximum measurement of BladeRFxA9:", df["BladeRFxA9 Measurement (dBm)"].max())
print("Minimum measurement of BladeRFxA9:", df["BladeRFxA9 Measurement (dBm)"].min())

df.head()

sns.histplot(data=df, x='Signal Strength (dBm)', hue='Network Type', kde=True)
plt.title('Signal Strength Distribution for each Network Type')
plt.show()


time_series_columns = ['Timestamp', 'Signal Strength (dBm)', 'Data Throughput (Mbps)', 'Latency (ms)']
df[time_series_columns].plot(x='Timestamp', subplots=True, figsize=(20, 9))
plt.suptitle('Time-Series Analysis of Signal Metrics')
plt.show()

performance_metrics = df.groupby(['Network Type', 'BB60C Measurement (dBm)'])[['Signal Strength (dBm)', 'Data Throughput (Mbps)', 'Latency (ms)']].mean()
performance_metrics = performance_metrics.sort_values(by='BB60C Measurement (dBm)', ascending=True)
                                                       

(performance_metrics)

performance_metrics1 = df.groupby(['Network Type', 'srsRAN Measurement (dBm)'])[['Signal Strength (dBm)', 'Data Throughput (Mbps)', 'Latency (ms)']].mean()
performance_metrics1 = performance_metrics1.sort_values(by='srsRAN Measurement (dBm)', ascending=True)


(performance_metrics1 )

performance_metrics2 = df.groupby(['Network Type', 'BladeRFxA9 Measurement (dBm)'])[['Signal Strength (dBm)', 'Data Throughput (Mbps)', 'Latency (ms)']].mean()
performance_metrics2 = performance_metrics2.sort_values(by='BladeRFxA9 Measurement (dBm)', ascending=True)


(performance_metrics2 )

#2. To Identify key factors that contribute to a device's performance.
performance_metric ='Data Throughput (Mbps)'

if performance_metric not in df.columns:
    raise ValueError(f"Column '{performance_metric}' not found in the DataFrame.")

numeric_columns = df.select_dtypes(include=[float,int])

correlation_matrix = numeric_columns.corr()

correlation_with_performance = correlation_matrix[performance_metric].sort_values(ascending=False)

print("Correlation with Device Performance:")
print(correlation_with_performance)

# Let's assume 'Data Throughput (Mbps)' is the chosen performance metric
performance_metric = 'Data Throughput (Mbps)'

# Perform ANOVA test
groups = df['Network Type'].unique()
anova_results = []
for group in groups:
    group_data = df[df['Network Type'] == group][performance_metric]
    anova_results.append(group_data)

statistic, p_value = f_oneway(*anova_results)

# Check the results
print("ANOVA results:")
print("F-statistic:", statistic)
print("p-value:", p_value)

key_factors = correlation_with_performance[correlation_with_performance > 0].index.tolist()

print("\nKey Factors Contributing to Device Performance:")
print(key_factors)

#3
df

#signal strength   
df['Signal Strength (dBm)'].corr(df['BB60C Measurement (dBm)'])

df['Signal Strength (dBm)'].corr(df['srsRAN Measurement (dBm)'])

df['Signal Strength (dBm)'].corr(df['BladeRFxA9 Measurement (dBm)'])

# Data Throughput (Mbps)
df['Data Throughput (Mbps)'].corr(df['BB60C Measurement (dBm)'])

df['Data Throughput (Mbps)'].corr(df['srsRAN Measurement (dBm)'])

df['Data Throughput (Mbps)'].corr(df['BladeRFxA9 Measurement (dBm)'])

#Latency (ms)
df['Latency (ms)'].corr(df['BB60C Measurement (dBm)'])

df['Latency (ms)'].corr(df['srsRAN Measurement (dBm)'])

df['Latency (ms)'].corr(df['BladeRFxA9 Measurement (dBm)'])

<h1>Report</h1>

1. The dataset contains 12 columns and 16829 rows.<br>
2. No missing values were found in any of the columns.<br>
3. The "Signal Quality (%)" column contains no data, so it can be neglected.<br> 
 
4. Each device performs differently for each network .For 3G, BB60C Measurement (dBm),srsRAN Measurement (dBm),BladeRFxA9 Measurement (dBm), all the devices are having same performence.<br>

5. For 4G, BladeRFxA9 Measurement (dBm) performs better than other devices.<br>

6. For 5G, BladeRFxA9 Measurement (dBm) permforms better than other devices.<br>

7. For LTE, BladeRFxA9 Measurement (dBm) performs better than other devices.<br>
8. The visualzation is done to see the Signal Strength Distribution for each Network Type.<br>
9. The visualzation is done to see the Time-Series Analysis of Signal Metrics. <br>

10. The key factors for device performance are 'Data Throughput (Mbps)', 'Longitude', and 'Latitude'. These factors were determined by performing an ANOVA (Analysis of Variance) test, which helps to assess whether there are significant differences in the performance of devices based on these factors.<br>

<h4>  This is a plan to optimize the usage of these three devices</h4>
11. Device selection: Choose the most suitable device for signal metrics collection based on Signal Strength, range, and           compatibility with network types.<br>
12. Strategic Deployment: Place devices strategically in locations with varying signal strengths and network types.<br>
13. Regular Data Collection:  Set up a schedule for consistent data collection at different times of the day and week.<br>
14. Data Synchronization: Ensure data from all devices is synchronized for accurate analysis.<br>
15. Data Validation: Implement validation checks to identify and remove erroneous data.<br>
16. Secure Data Storage: Store collected data securely and back it up regularly.<br>
17. Simple Data Analysis,Perform basic data analysis to gain insights into network performance.<br>
18. Feedback Loop: Continuously gather feedback to improve the plan's effectiveness.<br>
19. Adaptability: Ensure the plan can accommodate future network technologies.<br>
20. Privacy Measures: Prioritize data security and privacy during the process.<br>




